#define ENA 3
#define ENB 10
#define IN1 9
#define IN2 7
#define IN3 11
#define IN4 2


void setup() {
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(ENA, OUTPUT);
  pinMode(ENB, OUTPUT);
  Serial.begin(9600); // Initialize serial communication
  // Print a message that setup is complete (for debugging)
  Serial.println("Setup complete");
}
void loop() {
  String command = "";  // Declare command string outside the if-block

  if (Serial.available() > 0) {
    command = Serial.readStringUntil('\n');
    delay(50);  // Optional, to ensure full string is received
  } else {
    return;  // No data, skip rest of loop
  }
    // Debug: Print received value to Serial Monitor
  Serial.print("Received: ");
  Serial.println(command);
    // Stop command
  if (command == "5" || command == "5.0") {
    Serial.println("Stopping motors...");
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, LOW);
    analogWrite(ENA, 0);   
    analogWrite(ENB, 0);
    return;
  }

  int sepIndex = command.indexOf('@');
  if (sepIndex == -1) {
    Serial.println("Invalid command format");
    return;
  }

  String speedStr = command.substring(0, sepIndex);
  String ratioStr = command.substring(sepIndex + 1);

  float ratio = ratioStr.toFloat();
  int speed = 0;
  // Control logic based on received value
  if (ratio >= 0.0 && ratio <= 0.45 && speedStr == "s1") {
    // Move motors right to the right with s1 
    speed = 50;  // Low speed
    Serial.println("Moving right with s1 ");
    digitalWrite(IN1, HIGH); // left motor moved 
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);  
    digitalWrite(IN4, HIGH);  // right motor reversed
    analogWrite(ENB, speed);   
    analogWrite(ENA, speed);      
  }
  else if (ratio >= 0.0 && ratio <= 0.45 && speedStr == "s2") {
    // Move motors right to the right with s2
    speed=50;  //high speed
    Serial.println("Moving right with s2 ");
    digitalWrite(IN1, HIGH); // left motor moved 
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);  
    digitalWrite(IN4, HIGH);  // right motor reversed
    analogWrite(ENB, speed);   
    analogWrite(ENA, speed);     
  }
  else if (ratio >0.45 && ratio <0.55 && speedStr == "s1" ) {
   // Move motors forward with s1 
   Serial.println("Moving forwar with s1 ");
   speed=50; // low speed
   digitalWrite(IN1, HIGH); // leftt motor forward
   digitalWrite(IN2, LOW);
   digitalWrite(IN3, HIGH);  // rightt motor forward
   digitalWrite(IN4, LOW);
   analogWrite(ENA, speed);   
   analogWrite(ENB, speed);    
  }
  else if (ratio >0.45 && ratio <0.55 && speedStr == "s2" ) {
   // Move motors forward with s2
   Serial.println("Moving forward with s2 ");
   speed=150; // high speed
   digitalWrite(IN1, HIGH); // leftt motor forward
   digitalWrite(IN2, LOW);
   digitalWrite(IN3, HIGH);  // rightt motor forward
   digitalWrite(IN4, LOW);
   analogWrite(ENA, speed);   
   analogWrite(ENB, speed);     
  }
  else if (ratio >= 0.55 && ratio <= 1.0 && speedStr == "s1") {
   // Move motors to the left with s1 
   Serial.println("Moving left with s1 ");
   speed=50; //low speed 
   digitalWrite(IN1, LOW); 
   digitalWrite(IN2, HIGH); // leftt motor REVERSED 
   digitalWrite(IN3, HIGH);  // right motor moved
   digitalWrite(IN4, LOW);
   analogWrite(ENA, speed);   // move right motor
    analogWrite(ENB, speed);     // stop left motor 
  }
  else if (ratio >= 0.55 && ratio <= 1.0 && speedStr == "s2") {
   // Move motors forward to the left with s2 
   Serial.println("Moving left with s2");
   speed=50; //high speed  
   digitalWrite(IN1, LOW); 
   digitalWrite(IN2, HIGH); // leftt motor REVERSED 
   digitalWrite(IN3, HIGH);  // right motor moved
   digitalWrite(IN4, LOW);
   analogWrite(ENA, speed);   // move right motor
   analogWrite(ENB, speed);     // stop left motor 
  }
  else {
    // Stop motors if the value is outside the valid range
    Serial.println("Stopping motors...");
    speed=0;
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, LOW);
    analogWrite(ENA, 0);   
    analogWrite(ENB, 0);

  }
  delay(100); // Small delay to avoid flooding serial communication
}

  
